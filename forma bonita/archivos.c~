#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "struct.h"

Mat* crearMatriz(int lineaN,int lineaM, int** columna){
	Mat* matriz = malloc(sizeof(Mat));
	matriz->f=lineaN;
	matriz->c= lineaM;
	matriz->m= columna;
	return matriz;
}

Mat* leerMatriz(char* entrada){
	FILE* archivoEntrada = fopen(entrada,"r");
	int lineaN,lineaM;
	int i=0;
	int j=0;
	int temporal;
	
	fscanf(archivoEntrada,"%d\n%d\n",&lineaN,&lineaM);

	int **matrizPre = (int **)malloc(sizeof(int *)*lineaN);
	for (i=0;i<lineaN;i++){
		matrizPre[i] = (int *) malloc (sizeof(int)*lineaM);
	}

	i=0;
	while(fscanf(archivoEntrada,"%d ",&temporal)!=EOF){
		matrizPre[i][j]=temporal;	
		j++;
		if((j%lineaM)==0){
			i++;
			j=0;		
		}
	}
	Mat* matriz = crearMatriz(lineaN,lineaM,matrizPre);
	fclose(archivoEntrada);
	return matriz;
}

void escribirMatriz(Mat* matriz, char* nombre){
	int i,j;
	FILE* salida=fopen(nombre,"w");
	fprintf(salida,"%d\n%d\n",matriz->f,matriz->c);
	for(i=0;i<matriz->f;i++){
		for(j=0;j<matriz->c;j++){
			fprintf(salida,"%d ",matriz->m[i][j]);
		}	
		fprintf(salida,"\n");
	}
	fclose(salida);
}

void mostrarMatriz(Mat* matriz){
	int i,j;
	if(matriz==NULL){
		printf("[NULL]\n");	
	}
	else{
		for(i=0;i<matriz->f;i++){
			for(j=0;j<matriz->c;j++){
				printf("%d ",matriz->m[i][j]);
			}	
			printf("\n");
		}
	}
}

void igualarMatriz
void borrarMatriz(Mat** matriz){
	int i;
	if(*matriz!=NULL){
		for(i =0; i<(*matriz)->f;i++){
			free((*matriz)->m[i]);
			(*matriz)->m[i]=NULL;		
		}
		free(*matriz);
		*matriz=NULL;
	}
}

